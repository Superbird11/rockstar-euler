(Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:)

(1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...)

(By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.)

Modulo takes divisor and dividend       ( func modulo(divisor, dividend)    )
  Until divisor is less than dividend   (   while divisor < dividend        )
    Let divisor be without dividend     (     divisor -= dividend           )

  Give back divisor                     (   return divisor                  )


first is 1                              ( first = 1                          )
second is 2                             ( second = 2                         )
limit is 4000000                        ( limit = 4000000  // 4 million      )
sum is 0                                ( sum = 0                            )

Until second is greater than limit      ( while second < limit               )
  If Modulo taking second, 2 is 0       (   if modulo(second, 2) == 0        )
    Let sum be with second              (     sum += second                  )

  let second be first plus second       (   second += first                  )
  let first be second minus first       (   first = second - first           )

shout sum                               ( print sum                          )